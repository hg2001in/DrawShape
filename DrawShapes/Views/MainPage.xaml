<Page
    x:Class="DrawShapes.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:valueConverter="using:DrawShapes.ValueConverter"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <valueConverter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Page.Resources>

    <Grid x:Name="LayOutGrid">
        <RelativePanel>
            <CommandBar x:Name="MainCommandBar"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Right"
                        IsDynamicOverflowEnabled="True"
                        Loaded="MainCommandBar_OnLoaded"
                        FlowDirection="LeftToRight"
                        OverflowButtonVisibility="Collapsed"
                        RelativePanel.AlignRightWithPanel="True"
                        RelativePanel.AlignLeftWithPanel="True">

                <CommandBar.Background>
                    <SolidColorBrush Color="CornflowerBlue">
                    </SolidColorBrush>
                </CommandBar.Background>

                <CommandBar.Content>
                    <StackPanel Padding="10,5,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                Orientation="Horizontal">
                        <TextBlock x:Name="PageTitle" 
                                   HorizontalAlignment="Center" 
                                   VerticalAlignment="Center" 
                                   FontWeight="Bold" 
                                   FontSize="18"
                                   Foreground="White" 
                                   Text="Shapes" />

                    </StackPanel>
                </CommandBar.Content>
            </CommandBar>

            <Grid x:Name="MainGrid"
                  RelativePanel.AlignLeftWithPanel="True"
                  RelativePanel.AlignRightWithPanel="True"
                  RelativePanel.AlignBottomWithPanel="True"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  Padding="0,10,0,0"
                  RelativePanel.Below="MainCommandBar" Width="auto" Height="auto">

                <Grid.RowDefinitions >
                    <RowDefinition Height="400"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel x:Name="MainCommandPanel" 
                            RelativePanel.AlignTopWithPanel="True" 
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.AlignBottomWithPanel="True"
                            Orientation="Vertical"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            Grid.Row="0">

                    <Grid x:Name="CommandGrid"
                          HorizontalAlignment="Center" VerticalAlignment="Center">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="100*" />
                            <RowDefinition Height="100*" />
                            <RowDefinition Height="100*" />
                            <RowDefinition Height="100*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition Width="300*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0"  Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Text="Select shape"/>
                        <ComboBox Grid.Column="1" 
                                  Grid.Row="0" 
                                  Name="ComboxBox"  
                                  ItemsSource="{x:Bind ViewModel.ShapeItems}"
                                  SelectedItem="{x:Bind ViewModel.SelectedShapeItem, Mode=TwoWay}"
                                  DisplayMemberPath="Shapes"
                                  Width="240"/>

                        <TextBlock Text="Height" Grid.Column="0" Grid.Row="1" Margin="0,5,0,0"
                                           Visibility="{x:Bind ViewModel.SelectedShapeItem.IsHeightRequired, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <TextBox x:Name="tbHeight" Text="{x:Bind ViewModel.HeightUnit, Mode=TwoWay}" 
                                         Grid.Column="1" Grid.Row="1"
                                         Margin="0,5,0,0"
                                         HorizontalAlignment="Stretch" 
                                         Width="Auto"
                                         VerticalAlignment="Center" 
                                         Visibility="{x:Bind ViewModel.SelectedShapeItem.IsHeightRequired, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                        <TextBlock Text="Width" Margin="0,5,0,0"
                                   Visibility="{x:Bind ViewModel.SelectedShapeItem.IsLengthRequired, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Grid.Column="0" Grid.Row="2"/>
                        <TextBox x:Name="tbWidth" Margin="0,5,0,0"
                                 Text="{x:Bind ViewModel.WidthUnit, Mode=TwoWay}" 
                                 HorizontalAlignment="Stretch" 
                                 Grid.Column="1" Grid.Row="2"
                                 Width="Auto"
                                 VerticalAlignment="Center" 
                                 Visibility="{x:Bind ViewModel.SelectedShapeItem.IsLengthRequired, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                        <TextBlock Text="Radius" Margin="0,5,0,0" 
                                   Visibility="{x:Bind ViewModel.SelectedShapeItem.IsRadiusRequired, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Grid.Column="0" Grid.Row="3"/>
                        <TextBox x:Name="tbRadius" Margin="0,5,0,0" 
                                 Text="{x:Bind ViewModel.RadiusUnit, Mode=TwoWay}" 
                                 Grid.Column="1" Grid.Row="3"
                                 HorizontalAlignment="Stretch" 
                                 Width="Auto"
                                 VerticalAlignment="Center" 
                                 Visibility="{x:Bind ViewModel.SelectedShapeItem.IsRadiusRequired, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                        <Button Grid.Column="1" Grid.Row="4" x:Name="CreateShape" 
                                Margin="0,5,0,0"
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                Command="{x:Bind ViewModel.CreateShapeCommand}"
                                Content="Generate Shape"></Button>

                    </Grid>
                </StackPanel>

                <StackPanel x:Name="MainPanel" Grid.Row="1" 
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch">

                    <!--Circle Shape-->
                        <Ellipse x:Name="Circle" 
                                 RelativePanel.AlignTopWithPanel="True" 
                                 RelativePanel.AlignLeftWithPanel="True"
                                 RelativePanel.AlignRightWithPanel="True"
                                 RelativePanel.AlignBottomWithPanel="True"
                                 HorizontalAlignment="Stretch" 
                                 VerticalAlignment="Stretch"
                                 Stroke="Blue" StrokeThickness="5"
                                 Visibility="{x:Bind ViewModel.IsCircle, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 Height="{x:Bind ViewModel.HeightUnit, Mode=OneWay}" 
                                 Width="{x:Bind ViewModel.WidthUnit, Mode=OneWay}" />
                   
                        <!--Scalene Triangle-->
                        <Polygon x:Name="ScaleneTriangle"
                                 RelativePanel.AlignTopWithPanel="True" 
                                 RelativePanel.AlignLeftWithPanel="True"
                                 RelativePanel.AlignRightWithPanel="True"
                                 RelativePanel.AlignBottomWithPanel="True"
                                 HorizontalAlignment="center" VerticalAlignment="center"
                                 Points="{x:Bind ViewModel.ScaleneTrianglePoints, Mode=OneWay}"
                                 Visibility="{x:Bind ViewModel.IsScaleneTriangle, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 Stroke="Blue" StrokeThickness="5"/>
                    
                        <!--Isosceles Triangle-->
                        <Polygon x:Name="IsoscelesTriangle"
                                 RelativePanel.AlignTopWithPanel="True" 
                                 RelativePanel.AlignLeftWithPanel="True"
                                 RelativePanel.AlignRightWithPanel="True"
                                 RelativePanel.AlignBottomWithPanel="True"
                                 HorizontalAlignment="center" VerticalAlignment="center"
                                 Points="{x:Bind ViewModel.IsoscelesTrianglePoints, Mode=OneWay}"
                                 Visibility="{x:Bind ViewModel.IsIsoscelesTriangle, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 Stroke="Blue" StrokeThickness="5"/>

                        <!--Parallelogram-->
                        <Polygon x:Name="Parallelogram"
                                 RelativePanel.AlignTopWithPanel="True" 
                                 RelativePanel.AlignLeftWithPanel="True"
                                 RelativePanel.AlignRightWithPanel="True"
                                 RelativePanel.AlignBottomWithPanel="True"
                                 HorizontalAlignment="center" VerticalAlignment="center"
                                 Points="{x:Bind ViewModel.ParallelogramPoints, Mode=OneWay}"
                                 Visibility="{x:Bind ViewModel.IsParallelogram, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 Stroke="Blue" StrokeThickness="5"/>
                    
                        <!--Rectangle-->
                        <Rectangle x:Name="Square"
                                   RelativePanel.AlignTopWithPanel="True" 
                                   RelativePanel.AlignLeftWithPanel="True"
                                   RelativePanel.AlignRightWithPanel="True"
                                   RelativePanel.AlignBottomWithPanel="True"
                                   HorizontalAlignment="Stretch" 
                                   VerticalAlignment="Stretch"
                                   Visibility="{x:Bind ViewModel.IsRectangle, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Stroke="Blue" StrokeThickness="5"
                                   Height="{x:Bind ViewModel.HeightUnit, Mode=OneWay}" 
                                   Width="{x:Bind ViewModel.WidthUnit, Mode=OneWay}" />

                        <!--Oval-->
                        <Ellipse x:Name="Oval"
                                 RelativePanel.AlignTopWithPanel="True" 
                                 RelativePanel.AlignLeftWithPanel="True"
                                 RelativePanel.AlignRightWithPanel="True"
                                 RelativePanel.AlignBottomWithPanel="True"
                                 HorizontalAlignment="Stretch" 
                                 VerticalAlignment="Stretch"
                                 Visibility="{x:Bind ViewModel.IsOval, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 Stroke="Blue" StrokeThickness="5"
                                 Height="{x:Bind ViewModel.HeightUnit, Mode=OneWay}" 
                                 Width="{x:Bind ViewModel.WidthUnit, Mode=OneWay}" />
                    
                        <!--Polygon-->
                        <Polygon x:Name="Polygon"
                                 RelativePanel.AlignTopWithPanel="True" 
                                 RelativePanel.AlignLeftWithPanel="True"
                                 RelativePanel.AlignRightWithPanel="True"
                                 RelativePanel.AlignBottomWithPanel="True"
                                 HorizontalAlignment="center" VerticalAlignment="center"
                                 Points="{x:Bind ViewModel.PolygonPoints, Mode=OneWay}"
                                 Visibility="{x:Bind ViewModel.IsPolygon, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 Stroke="Blue" StrokeThickness="5"/>
                    </StackPanel>
            </Grid>
        </RelativePanel>
    </Grid>
</Page>


